#!/usr/bin/sh

PACKAGES_HOME="~/compose"
mkdir $PACKAGES_HOME

sudo yum update
sudo yum install -y docker
sudo usermod -a -G docker ec2-user
sudo service docker start
sudo chkconfig docker on

# Install docker-compose
sudo curl -L \
  https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m) \
  -o /usr/local/bin/docker-compose &&\
  sudo chmod +x /usr/local/bin/docker-compose

# Verify install
docker --version
docker-compose version

cat <<EOF > $PACKAGES_HOME/nginx.conf
events { worker_connections 1024; }
http {
    upstream backends {    # Creo upstream
        server server1:80;    # 1
        server server2:80;    # 2
    }
    server {
        listen 8080;
        location / {
            proxy_pass         http://backends;  # Balanceo a mi upstream
        }
    }
}
EOF

# HTML servicios
cat <<EOF > $PACKAGES_HOME/server1.html
<html><body>backend 1</body></html>
EOF
cat <<EOF > $PACKAGES_HOME/server2.html
<html><body>backend 2</body></html>
EOF

# Docker Compose
cat <<EOF > $PACKAGES_HOME/docker-compose.yml
version: '3'
services:
  # Load Balancer
  nginx:
    image: nginx:1.16.0-alpine
    volumes:
      - $PACKAGES_HOME/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "8080:8080"
  # Servicio 1
  server1:
    image: nginx:1.16.0-alpine
    volumes:
      - $PACKAGES_HOME/server1.html:/usr/share/nginx/html/index.html
  # Servicio 2
  server2:
    image: nginx:1.16.0-alpine
    volumes:
      - $PACKAGES_HOME/server2.html:/usr/share/nginx/html/index.html
EOF

# Run
docker-compose up -d